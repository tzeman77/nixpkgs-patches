[libwvstreams] Fixed crashed caused by compiler optimizations

diff --git a/pkgs/development/libraries/wvstreams/default.nix b/pkgs/development/libraries/wvstreams/default.nix
index ecfc9b8..ace81c0 100644
--- a/pkgs/development/libraries/wvstreams/default.nix
+++ b/pkgs/development/libraries/wvstreams/default.nix
@@ -8,7 +8,11 @@ stdenv.mkDerivation {
     sha256 = "0cvnq3mvh886gmxh0km858aqhx30hpyrfpg1dh6ara9sz3xza0w4";
   };
 
-  patches = [ ./compile.patch ];
+  patches = [
+    ./compile.patch
+    ./wvstreams-4.6.1-magic.patch
+    ./wvstreams-4.6.1-make.patch
+  ];
 
   preConfigure = ''
     find -type f | xargs sed -i 's@/bin/bash@bash@g'
@@ -18,6 +22,9 @@ stdenv.mkDerivation {
 
   buildInputs = [ qt4 dbus zlib openssl readline perl ];
 
+  buildFlagsArray = [ "CXXFLAGS=-O0 -g -fPIC" ];
+  dontStrip = true;
+
   meta = {
     description = "Network programming library in C++";
     homepage = http://alumnit.ca/wiki/index.php?page=WvStreams;
diff --git a/pkgs/development/libraries/wvstreams/wvstreams-4.6.1-magic.patch b/pkgs/development/libraries/wvstreams/wvstreams-4.6.1-magic.patch
new file mode 100644
index 0000000..cd7b5a1
--- /dev/null
+++ b/pkgs/development/libraries/wvstreams/wvstreams-4.6.1-magic.patch
@@ -0,0 +1,39 @@
+https://raw.githubusercontent.com/PhantomX/slackbuilds/master/libwvstreams/patches/wvstreams-4.6.1-magic.patch
+https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=674006
+https://bugzilla.redhat.com/show_bug.cgi?id=812651
+
+diff -up wvstreams-4.6.1/include/wvtask.h.magic wvstreams-4.6.1/include/wvtask.h
+--- wvstreams-4.6.1/include/wvtask.h.magic	2008-07-14 21:11:35.000000000 +0200
++++ wvstreams-4.6.1/include/wvtask.h	2012-06-03 17:24:47.909187849 +0200
+@@ -45,7 +45,8 @@ class WvTask
+     typedef void TaskFunc(void *userdata);
+     
+     static int taskcount, numtasks, numrunning;
+-    int magic_number, *stack_magic;
++    int volatile magic_number;
++    int *stack_magic;
+     WvString name;
+     int tid;
+     
+@@ -84,7 +85,7 @@ class WvTaskMan
+     static WvTaskMan *singleton;
+     static int links;
+     
+-    static int magic_number;
++    static int volatile magic_number;
+     static WvTaskList all_tasks, free_tasks;
+     
+     static void get_stack(WvTask &task, size_t size);
+diff -up wvstreams-4.6.1/utils/wvtask.cc.magic wvstreams-4.6.1/utils/wvtask.cc
+--- wvstreams-4.6.1/utils/wvtask.cc.magic	2009-05-13 23:42:52.000000000 +0200
++++ wvstreams-4.6.1/utils/wvtask.cc	2012-06-03 14:29:09.729656804 +0200
+@@ -58,7 +58,8 @@ char *alloca ();
+ int WvTask::taskcount, WvTask::numtasks, WvTask::numrunning;
+ 
+ WvTaskMan *WvTaskMan::singleton;
+-int WvTaskMan::links, WvTaskMan::magic_number;
++int WvTaskMan::links;
++int volatile WvTaskMan::magic_number;
+ WvTaskList WvTaskMan::all_tasks, WvTaskMan::free_tasks;
+ ucontext_t WvTaskMan::stackmaster_task, WvTaskMan::get_stack_return,
+     WvTaskMan::toplevel;
diff --git a/pkgs/development/libraries/wvstreams/wvstreams-4.6.1-make.patch b/pkgs/development/libraries/wvstreams/wvstreams-4.6.1-make.patch
new file mode 100644
index 0000000..0982fa6
--- /dev/null
+++ b/pkgs/development/libraries/wvstreams/wvstreams-4.6.1-make.patch
@@ -0,0 +1,53 @@
+https://raw.githubusercontent.com/PhantomX/slackbuilds/master/libwvstreams/patches/wvstreams-4.6.1-make.patch
+
+diff --git a/Makefile b/Makefile
+index 72c8bef..26cb6df 100644
+--- a/Makefile
++++ b/Makefile
+@@ -235,6 +235,11 @@ TARGETS_A = $(filter %.a,$(TARGETS))
+ all: config.mk $(filter-out $(WV_EXCLUDES), $(TARGETS))
+ 
+ TESTS += wvtestmain
++TESTS_DEPS = $(LIBWVSTREAMS)
++ifneq ("$(with_dbus)", "no")
++  TESTS_DEPS += libwvdbus.so
++endif
++$(TESTS): $(TESTS_DEPS)
+ 
+ REAL_TESTS = $(filter-out $(TEST_SKIP_OBJS), $(TESTS))
+ $(addsuffix .o,$(REAL_TESTS)):
+diff --git a/wvrules.mk b/wvrules.mk
+index 877f700..921c41b 100644
+--- a/wvrules.mk
++++ b/wvrules.mk
+@@ -158,18 +158,18 @@ endif
+ ../%.o:;	@echo "Object $@ does not exist!"; exit 1
+ /%.a:;		@echo "Library $@ does not exist!"; exit 1
+ 
+-%.o: %.c;	$(call wvcc ,$@,$<,$*)
+-%.fpic.o: %.c;	$(call wvcc ,$@,$<,$*,-fPIC)
+-%.o: %.cc;	$(call wvcxx,$@,$<,$*)
+-%.fpic.o: %.cc;	$(call wvcxx,$@,$<,$*,-fPIC)
+-%.o: %.cpp;	$(call wvcxx,$@,$<,$*)
+-%.fpic.o:%.cpp; $(call wvcxx,$@,$<,$*,-fPIC)
+-%.s: %.c;	$(call wvcc ,$@,$<,$*,,-S)
+-%.s: %.cc;	$(call wvcxx,$@,$<,$*,,-S)
+-%.s: %.cpp;	$(call wvcxx,$@,$<,$*,,-S)
+-%.E: %.c;	$(call wvcc,$@,$<,$*,,-E)
+-%.E: %.cc;	$(call wvcxx,$@,$<,$*,,-E)
+-%.E: %.cpp;	$(call wvcxx,$@,$<,$*,,-E)
++%.o: CC %.c;		$(call wvcc ,$@,$<,$*)
++%.fpic.o: CC %.c;	$(call wvcc ,$@,$<,$*,-fPIC)
++%.o: CXX %.cc;		$(call wvcxx,$@,$<,$*)
++%.fpic.o: CXX %.cc;	$(call wvcxx,$@,$<,$*,-fPIC)
++%.o: CXX %.cpp;		$(call wvcxx,$@,$<,$*)
++%.fpic.o: CXX %.cpp; 	$(call wvcxx,$@,$<,$*,-fPIC)
++%.s: CC %.c;		$(call wvcc ,$@,$<,$*,,-S)
++%.s: CXX %.cc;		$(call wvcxx,$@,$<,$*,,-S)
++%.s: CXX %.cpp;		$(call wvcxx,$@,$<,$*,,-S)
++%.E: CC %.c;		$(call wvcc,$@,$<,$*,,-E)
++%.E: CXX %.cc;		$(call wvcxx,$@,$<,$*,,-E)
++%.E: CXX %.cpp;		$(call wvcxx,$@,$<,$*,,-E)
+ 
+ %.moc: %.h;	$(MOC) -o $@ $<
+ 
diff --git a/pkgs/os-specific/linux/wvdial/default.nix b/pkgs/os-specific/linux/wvdial/default.nix
index 7decd42..d1ff5f2 100644
--- a/pkgs/os-specific/linux/wvdial/default.nix
+++ b/pkgs/os-specific/linux/wvdial/default.nix
@@ -19,6 +19,9 @@ stdenv.mkDerivation rec {
     sed -e '1i#include <unistd.h>' -i $(find . -name '*.cc')
   '';
 
+  buildFlagsArray = [ "CXXFLAGS=-O0 -g -fPIC" ];
+  dontStrip = true;
+
   meta = {
     description = "A dialer that automatically recognises the modem";
     homepage = http://alumnit.ca/wiki/index.php?page=WvDial;
