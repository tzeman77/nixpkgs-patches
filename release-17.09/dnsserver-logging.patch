dnsserver: separate logging

diff --git a/nixos/modules/services/networking/tinydns.nix b/nixos/modules/services/networking/tinydns.nix
index b1486b3..ec3ab8e 100644
--- a/nixos/modules/services/networking/tinydns.nix
+++ b/nixos/modules/services/networking/tinydns.nix
@@ -37,6 +37,22 @@ in
         default = "/var/db/tinydns/root";
         description = "tinydns root dir";
       };
+
+      logDir = mkOption {
+        default = "/var/log/dns/server";
+        description = "tinydns log dir";
+      };
+
+      logSize = mkOption {
+        default = 1048576;
+        description = "tinydns log file size, see `s' parameter of multilog(8)";
+      };
+
+      logNum = mkOption {
+        default = 10;
+        description = "tinydns log file number, see `n' parameter of multilog(8)";
+      };
+
     };
   };
 
@@ -66,12 +82,41 @@ in
 
       preStart = ''
         mkdir -p ${cfg.root}
+        if [ ! -p ${cfg.root}/.out ]; then
+          mkfifo -m640 ${cfg.root}/.out
+          chown tinydns:dnslog ${cfg.root}/.out
+        fi
+      '';
+
+      serviceConfig = {
+        ExecStart =
+          "${pkgs.bash}/bin/sh -c '" +
+          "exec 1> ${cfg.root}/.out; " +
+          "exec 2>&1; " +
+          "exec ${dtools}/bin/envuidgid tinydns ${dtools}/bin/softlimit " +
+          "-d ${toString cfg.dataLimit} ${pkg}/bin/tinydns" +
+          "'";
+        Restart = "always";
+        Type = "simple";
+      };
+    };
+
+    systemd.services.tinydns-log = {
+      description = "DNS server logging service";
+      wantedBy = [ "multi-user.target" ];
+      after = [ "network.target" ];
+
+      preStart = ''
+        mkdir -p ${cfg.logDir}
+        chown -R dnslog:dnslog ${cfg.logDir}
       '';
 
       serviceConfig = {
         ExecStart =
-          "${dtools}/bin/envuidgid tinydns ${dtools}/bin/softlimit " +
-          "-d ${toString cfg.dataLimit} ${pkg}/bin/tinydns";
+          "${pkgs.bash}/bin/sh -c 'exec <${cfg.root}/.out; " +
+          "exec ${dtools}/bin/setuidgid dnslog " +
+          "${dtools}/bin/multilog t n${toString cfg.logNum} s${toString cfg.logSize} ${cfg.logDir} " +
+          "'";
         Restart = "always";
         Type = "simple";
       };
