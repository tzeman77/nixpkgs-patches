diff --git a/nixos/modules/misc/ids.nix b/nixos/modules/misc/ids.nix
index cb75845baaf..f5d7812a59a 100644
--- a/nixos/modules/misc/ids.nix
+++ b/nixos/modules/misc/ids.nix
@@ -298,6 +298,14 @@
       minio = 280;
       kanboard = 281;
 
+      alias = 7790;
+      qmaild = 7791;
+      qmaill = 7792;
+      qmailp = 7793;
+      qmailq = 7794;
+      qmailr = 7795;
+      qmails = 7796;
+
       # When adding a uid, make sure it doesn't match an existing gid. And don't use uids above 399!
 
       nixbld = 30000; # start of range of uids
@@ -569,6 +577,8 @@
       # uids and gids. Also, don't use gids above 399!
 
       users = 100;
+      qmail = 2107;
+      nofiles = 2108;
       nixbld = 30000;
       nogroup = 65534;
     };
diff --git a/nixos/modules/module-list.nix b/nixos/modules/module-list.nix
index d8c7c7e5c23..bf515435aba 100644
--- a/nixos/modules/module-list.nix
+++ b/nixos/modules/module-list.nix
@@ -271,6 +271,7 @@
   ./services/mail/postfix.nix
   ./services/mail/postsrsd.nix
   ./services/mail/postgrey.nix
+  ./services/mail/qmail.nix
   ./services/mail/spamassassin.nix
   ./services/mail/rspamd.nix
   ./services/mail/rmilter.nix
diff --git a/nixos/modules/services/mail/qmail.nix b/nixos/modules/services/mail/qmail.nix
new file mode 100644
index 00000000000..49b971a4de2
--- /dev/null
+++ b/nixos/modules/services/mail/qmail.nix
@@ -0,0 +1,207 @@
+{ config, pkgs, lib, ... }:
+
+with lib;
+
+let
+
+  cfg = config.runit.qmail;
+  pkg = pkgs.qmail;
+  uids = config.ids.uids;
+  gids = config.ids.gids;
+
+  #virtualDomainsF = concatStringsSep "\n" (map (d: u: "d:u") cfg.virtualdomains);
+  virtualDomainsF = concatStringsSep "\n" (mapAttrsToList (d: u:
+    "${d}:${u}") cfg.virtualdomains);
+
+  qmailDerivation = pkgs.stdenv.mkDerivation {
+    name = "qmail";
+    preferLocalBuild = true;
+    buildCommand = ''
+      mkdir -p $out/{alias,control}
+      echo "${cfg.me}" > $out/control/me
+      echo "${concatStringsSep "\n" cfg.locals}" > $out/control/locals
+      echo "${cfg.plusdomain}" > $out/control/plusdomain
+      echo "${concatStringsSep "\n" cfg.rcpthosts}" > $out/control/rcpthosts
+      echo "${virtualDomainsF}" > $out/control/virtualdomains
+      ${concatStringsSep "\n" (mapAttrsToList (n: v:
+        "echo -n '${v}' > $out/alias/.qmail-${n}"
+      ) cfg.aliases)}
+      ${concatStringsSep "\n" (mapAttrsToList (n: v:
+        "echo -n '${v}' | sed -e 's/^  \+//' > $out/control/${n}"
+      ) cfg.control)}
+    '';
+  };
+
+in
+
+{
+
+  ###### interface
+
+  options = {
+
+    runit.qmail = {
+
+      enable = mkOption {
+        default = false;
+        description = "Whether to enable qmail service.";
+      };
+
+      defaultdelivery = mkOption {
+        default = "./Maildir/";
+        description = "Default delivery (mbox or maildir). See qmail-start(8).";
+      };
+
+      me = mkOption {
+        default = "";
+        description = "Fully qualified name of this host.";
+      };
+
+      defaultdomain = mkOption {
+        default = "";
+        description = "Default domain name. See qmail-inject(8).";
+      };
+
+      locals = mkOption {
+        default = [];
+        description = ''
+          List of domain names that the current host receives mail for. See
+          qmail-send(8).
+        '';
+      };
+
+      plusdomain = mkOption {
+        default = "";
+        description = ''
+          Plus domain name. qmail-inject adds this name to any host name that
+          ends with a plus sign. See qmail-inject(8).
+        '';
+      };
+
+      rcpthosts = mkOption {
+        default = [];
+        description = ''
+          List of domain names that the current host receives mail for. See
+          qmail-send(8).
+        '';
+      };
+
+      virtualdomains = mkOption {
+        default = {};
+        type = types.attrsOf types.str;
+        description = "List of virtual users or domains. See qmail-send(8).";
+        example = {
+          "example.org" = "jsmith";
+        };
+      };
+
+      aliases = mkOption {
+        default = {};
+        type = types.attrsOf types.str;
+        example = {
+          root = "jsmith";
+          postmaster = "another user";
+        };
+        description = ''
+          Global qmail aliases configuration. Addresses that don't start with a
+          username are controlled by a special user, alias. Delivery
+          instructions for foo go into ~alias/.qmail-foo; delivery instructions
+          for user-foo go into ~user/.qmail-foo. See dot-qmail(5) for the full
+          story or doc/INSTALL.alias in qmail installaction directory.
+        '';
+      };
+
+      control = mkOption {
+        default = {};
+        type = types.attrsOf types.str;
+        description = "Additional qmail control files. See qmail-control(8).";
+        example = {
+          "concurrencylocal" = "25";
+          "badmailfrom" = ''
+            .*spam.*
+            # force users to fully qualify themselves (ie deny "user", accept "user@domain")
+            !@
+            xxx
+          '';
+        };
+      };
+
+      log = mkOption {
+        default = {};
+        description = "Qmail log configuration. See runit logging.";
+      };
+
+    };
+  };
+
+
+  ###### implementation
+
+  config = mkIf cfg.enable {
+
+    environment.systemPackages = [ pkg ];
+
+    security.wrappers = {
+      "qmail-queue" = {
+        source = "${pkg}/bin/qmail-queue";
+        owner = "qmailq";
+        group = "qmail";
+      };
+    };
+
+    # groups
+    users.extraGroups = {
+      qmail.gid = gids.qmail;
+      nofiles.gid = gids.nofiles;
+    };
+
+    users.extraUsers = {
+      alias = {
+        uid = uids.alias;
+        group = "nofiles";
+        home = "/var/qmail/alias";
+        createHome = false;
+      };
+      qmaild = { uid = uids.qmaild; group = "nofiles"; };
+      qmaill = { uid = uids.qmaill; group = "nofiles"; };
+      qmailp = { uid = uids.qmailp; group = "nofiles"; };
+      qmailq = { uid = uids.qmailq; group = "qmail"; };
+      qmailr = { uid = uids.qmailr; group = "qmail"; };
+      qmails = { uid = uids.qmails; group = "qmail"; };
+    };
+
+    runit.services.qmail = {
+
+      preRun = ''
+        #!${pkgs.bash}/bin/sh
+        qdir=/var/qmail/queue
+        cdir=/var/qmail/control
+        adir=/var/qmail/alias
+        bdir=/var/qmail/bin
+        [ -d $qdir ] || ${pkg}/bin/queue-fix $qdir
+        [ -d $cdir -a ! -L $cdir ] && mv $cdir $cdir.bak
+        ln -sfn ${qmailDerivation}/control $cdir
+        [ -d $adir -a ! -L $adir ] && mv $adir $adir.bak
+        ln -sfn ${qmailDerivation}/alias $adir
+        [ -d $bdir ] || mkdir -p $bdir
+        for i in ${pkg}/bin/*; do
+          if [ `basename $i` = "qmail-queue" ]; then
+            ln -sfn /run/wrappers/bin/qmail-queue $bdir
+          else
+            ln -sfn $i $bdir
+          fi
+        done
+      '';
+
+      cmd = "${pkg}/bin/qmail-start ${cfg.defaultdelivery}";
+
+      log = cfg.log;
+
+    };
+
+  };
+
+}
+
+# vim: et ts=2 sw=2 syn=conf 
+
