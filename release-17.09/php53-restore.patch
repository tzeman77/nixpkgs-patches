PHP 5.3 restored

Reverted commit 0bbe7231910b1185f5b65bb6179e34cf3329ea3e


Header from folded patch 'php53-url.patch':

PHP 5.3: fix url


Header from folded patch 'php53-shared-extensions.patch':

php53 shared extensions


Header from folded patch 'php53-mcrypt-enable.patch':

php53: mcrypt enable


Header from folded patch 'php53-mysql55.patch':

php53: depend on mysql55 instead of mysql


Header from folded patch 'php53-apc.patch':

php-apc for php_fpm53

diff --git a/pkgs/development/interpreters/php/5.3-freetype-dirs.patch b/pkgs/development/interpreters/php/5.3-freetype-dirs.patch
new file mode 100644
index 00000000000..3b78f9b309b
--- /dev/null
+++ b/pkgs/development/interpreters/php/5.3-freetype-dirs.patch
@@ -0,0 +1,64 @@
+From a0955f351c7eb1022da7ae36970ffef3b00c8aff Mon Sep 17 00:00:00 2001
+From: Adam Harvey <aharvey@php.net>
+Date: Sat, 7 Dec 2013 19:39:40 -0800
+Subject: [PATCH] Switch to using freetype-config for freetype detection.
+
+This fixes GD compilation against libfreetype 2.5.1 and later after they made
+the rather interesting decision to change their include directory layout in a
+point release.
+
+The original suggestion in the bug was to use pkg-config, but my inclination is
+to use freetype-config instead: we should be able to get the same configuration
+information without actually needing pkg-config installed, since pkg-config is
+by no means guaranteed to exist on many Unices and distros, whereas
+freetype-config should always be present if a libfreetype build environment is
+installed. Let's try it out and see what happens.
+
+Fixes bug #64405 (Use freetype-config for determining freetype2 dir(s)).
+
+diff --git a/ext/gd/config.m4 b/ext/gd/config.m4
+index 0e35ece..732e14c 100644
+--- a/ext/gd/config.m4
++++ b/ext/gd/config.m4
+@@ -193,30 +193,25 @@ AC_DEFUN([PHP_GD_FREETYPE2],[
+   if test "$PHP_FREETYPE_DIR" != "no"; then
+ 
+     for i in $PHP_FREETYPE_DIR /usr/local /usr; do
+-      if test -f "$i/include/freetype2/freetype/freetype.h"; then
++      if test -f "$i/bin/freetype-config"; then
+         FREETYPE2_DIR=$i
+-        FREETYPE2_INC_DIR=$i/include/freetype2
++        FREETYPE2_CONFIG="$i/bin/freetype-config"
+         break
+       fi
+     done
+ 
+     if test -z "$FREETYPE2_DIR"; then
+-      AC_MSG_ERROR([freetype.h not found.])
++      AC_MSG_ERROR([freetype-config not found.])
+     fi
+ 
+-    PHP_CHECK_LIBRARY(freetype, FT_New_Face,
+-    [
+-      PHP_ADD_LIBRARY_WITH_PATH(freetype, $FREETYPE2_DIR/$PHP_LIBDIR, GD_SHARED_LIBADD)
+-      PHP_ADD_INCLUDE($FREETYPE2_DIR/include)
+-      PHP_ADD_INCLUDE($FREETYPE2_INC_DIR)
+-      AC_DEFINE(USE_GD_IMGSTRTTF, 1, [ ])
+-      AC_DEFINE(HAVE_LIBFREETYPE,1,[ ])
+-      AC_DEFINE(ENABLE_GD_TTF,1,[ ])
+-    ],[
+-      AC_MSG_ERROR([Problem with freetype.(a|so). Please check config.log for more information.])
+-    ],[
+-      -L$FREETYPE2_DIR/$PHP_LIBDIR
+-    ])
++    FREETYPE2_CFLAGS=`$FREETYPE2_CONFIG --cflags`
++    FREETYPE2_LIBS=`$FREETYPE2_CONFIG --libs`
++
++    PHP_EVAL_INCLINE($FREETYPE2_CFLAGS)
++    PHP_EVAL_LIBLINE($FREETYPE2_LIBS, GD_SHARED_LIBADD)
++    AC_DEFINE(USE_GD_IMGSTRTTF, 1, [ ])
++    AC_DEFINE(HAVE_LIBFREETYPE,1,[ ])
++    AC_DEFINE(ENABLE_GD_TTF,1,[ ])
+   else
+     AC_MSG_RESULT([If configure fails try --with-freetype-dir=<DIR>])
+   fi
diff --git a/pkgs/development/interpreters/php/5.3.nix b/pkgs/development/interpreters/php/5.3.nix
new file mode 100644
index 00000000000..a2b58c51f2a
--- /dev/null
+++ b/pkgs/development/interpreters/php/5.3.nix
@@ -0,0 +1,319 @@
+{ stdenv, fetchurl, composableDerivation, autoconf, automake, flex, bison
+, apacheHttpd, mysql55, libxml2, readline, zlib, curl, gd, postgresql, gettext
+, openssl, pkgconfig, sqlite, config, libjpeg, libpng, freetype, libxslt
+, libmcrypt, bzip2, icu, libssh2, makeWrapper, uwimap
+, gdbm, gmp
+, pam }:
+
+let
+  libmcryptOverride = libmcrypt.override { disablePosixThreads = true; };
+in
+
+composableDerivation.composableDerivation {} ( fixed : let inherit (fixed.fixed) version; in {
+
+  version = "5.3.29";
+
+  name = "php-${version}";
+
+  enableParallelBuilding = true;
+
+  buildInputs
+    = [ flex bison pkgconfig ]
+    ++ stdenv.lib.optionals stdenv.isDarwin [ libssh2 makeWrapper ];
+
+  # need to include the C++ standard library when compiling on darwin
+  NIX_LDFLAGS = stdenv.lib.optionalString stdenv.isDarwin "-lstdc++";
+
+  # need to specify where the dylib for icu is stored
+  DYLD_LIBRARY_PATH = stdenv.lib.optionalString stdenv.isDarwin "${icu}/lib";
+
+  flags = {
+
+    # much left to do here...
+
+    # SAPI modules:
+
+      apxs2 = {
+        configureFlags = ["--with-apxs2=${apacheHttpd}/bin/apxs"];
+        buildInputs = [apacheHttpd];
+      };
+
+      # Extensions
+
+      calendar = {
+        configureFlags = ["--enable-calendar=shared"];
+      };
+
+      curl = {
+        configureFlags = ["--with-curl=shared,${curl.dev}" "--with-curlwrappers"];
+        buildInputs = [curl openssl];
+      };
+
+      pcntl = {
+        configureFlags = [ "--enable-pcntl" ];
+      };
+
+      zlib = {
+        configureFlags = ["--with-zlib=${zlib.dev}"];
+        buildInputs = [zlib];
+      };
+
+      libxml2 = {
+        configureFlags
+          = [ "--with-libxml-dir=${libxml2.dev}" ];
+        buildInputs = [ libxml2 ];
+      };
+
+      readline = {
+        configureFlags = ["--with-readline=${readline.dev}"];
+        buildInputs = [ readline ];
+      };
+
+      sqlite = {
+        configureFlags = [
+#         "--with-sqlite=shared,${sqlite}"
+          "--with-pdo-sqlite=shared,${sqlite.dev}"
+        ];
+        buildInputs = [ sqlite ];
+      };
+
+      posix = {
+        configureFlags = ["--enable-posix=shared"];
+      };
+
+      postgresql = {
+        configureFlags = ["--with-pgsql=shared,${postgresql}"];
+        buildInputs = [ postgresql ];
+      };
+
+      pdo_pgsql = {
+        configureFlags = ["--with-pdo-pgsql=shared,${postgresql}"];
+        buildInputs = [ postgresql ];
+      };
+
+      mysql = {
+        configureFlags = [
+          "--with-mysql=shared,${mysql55}"
+          #"--with-mysql-sock=/tmp/mysql.sock"
+        ];
+        buildInputs = [ mysql55 ];
+      };
+
+      mysqli = {
+        configureFlags = ["--with-mysqli=${mysql55}/bin/mysql_config"];
+        buildInputs = [ mysql55 ];
+      };
+
+      mysqli_embedded = {
+        configureFlags = ["--enable-embedded-mysqli"];
+        depends = "mysqli";
+        assertion = fixed.mysqliSupport;
+      };
+
+      pdo_mysql = {
+        configureFlags = ["--with-pdo-mysql=shared,${mysql55}"];
+        buildInputs = [ mysql55 ];
+      };
+
+      bcmath = {
+        configureFlags = ["--enable-bcmath=shared"];
+      };
+
+      gd = {
+        configureFlags = [
+          "--with-gd" #=shared,${gd.dev}"
+          "--with-freetype-dir=${freetype.dev}"
+          "--with-png-dir=${libpng.dev}"
+          "--with-jpeg-dir=${libjpeg.dev}"
+        ];
+        buildInputs = [libpng libjpeg freetype];
+      };
+
+      soap = {
+        configureFlags = ["--enable-soap=shared"];
+      };
+
+      sockets = {
+        configureFlags = ["--enable-sockets"];
+      };
+
+      openssl = {
+        configureFlags = ["--with-openssl"];
+        buildInputs = [openssl openssl.dev];
+      };
+
+      mbstring = {
+        configureFlags = ["--enable-mbstring"];
+      };
+
+      gettext = {
+        configureFlags = ["--with-gettext=${gettext}"];
+        buildInputs = [gettext];
+      };
+
+      imap = {
+        configureFlags = [ "--with-imap=shared,${uwimap}" "--with-imap-ssl=shared" ]
+          # uwimap builds with kerberos on darwin
+          ++ stdenv.lib.optional (stdenv.isDarwin) "--with-kerberos";
+        buildInputs = [ uwimap openssl ]
+          ++ stdenv.lib.optional (!stdenv.isDarwin) pam;
+      };
+
+      intl = {
+        configureFlags = ["--enable-intl"];
+        buildInputs = [icu];
+      };
+
+      exif = {
+        configureFlags = ["--enable-exif"];
+      };
+
+      xsl = {
+        configureFlags = ["--with-xsl=shared,${libxslt.dev}"];
+        buildInputs = [libxslt];
+      };
+
+      mcrypt = {
+        configureFlags = ["--with-mcrypt=shared,${libmcrypt}"];
+        buildInputs = [libmcryptOverride];
+      };
+
+      bz2 = {
+        configureFlags = ["--with-bz2=shared,${bzip2.dev}"];
+        buildInputs = [bzip2];
+      };
+
+      zip = {
+        configureFlags = ["--enable-zip"];
+      };
+
+      ftp = {
+        configureFlags = ["--enable-ftp=shared"];
+      };
+
+      gdbm = {
+        configureFlags = ["--with-gdbm=shared,${gdbm}"];
+      };
+
+      gmp = {
+        configureFlags = ["--with-gmp=shared,${gmp.dev}"];
+      };
+
+      mhash = {
+        configureFlags = ["--with-mhash=shared"];
+      };
+
+#     pspell = {
+#       configureFlags = ["--with-pspell=shared"];
+#     };
+
+      shmop = {
+        configureFlags = ["--enable-shmop=shared"];
+      };
+
+      sysvmsg = {
+        configureFlags = ["--enable-sysvmsg"];
+      };
+
+      sysvsem = {
+        configureFlags = ["--enable-sysvsem=shared"];
+      };
+
+      sysvshm = {
+        configureFlags = ["--enable-sysvsem=shared"];
+      };
+
+#     tidy = {
+#       configureFlags = ["--with-tidy=shared"];
+#     };
+
+      mlrpc = {
+        configureFlags = ["--with-xmlrpc=shared"];
+      };
+
+      fpm = {
+        configureFlags = ["--enable-fpm"];
+      };
+    };
+
+  cfg = {
+    apxs2Support = config.php.apxs2 or true;
+    bcmathSupport = config.php.bcmath or true;
+    bz2Support = config.php.bz2 or true;
+    calendarSuppport = config.php.calendar or true;
+    curlSupport = config.php.curl or true;
+    exifSupport = config.php.exif or true;
+    ftpSupport = config.php.ftp or true;
+    fpmSupport = config.php.fpm or false;
+    gdSupport = config.php.gd or true;
+    gdbmSupport = config.php.gdbm or false;
+    gettextSupport = config.php.gettext or true;
+    gmpSupport = config.php.gmp or false;
+    imapSupport = config.php.imap or false;
+    intlSupport = config.php.intl or true;
+    libxml2Support = config.php.libxml2 or true;
+    mbstringSupport = config.php.mbstring or true;
+    mcryptSupport = config.php.mcrypt or true;
+    mhashSupport = config.php.mhash or false;
+    mysqlSupport = config.php.mysql or true;
+    mysqliSupport = config.php.mysqli or true;
+    opensslSupport = config.php.openssl or true;
+    pcntlSupport = config.php.pcntl or true;
+    pdo_mysqlSupport = config.php.pdo_mysql or true;
+    pdo_pgsqlSupport = config.php.pdo_pgsql or true;
+    posixSupport = config.php.posix or true;
+    postgresqlSupport = config.php.postgresql or true;
+#   pspellSupport = config.php.pspell or true;
+    readlineSupport = config.php.readline or true;
+    shmopSupport = config.php.shmop or true;
+    sysvmsgSupport = config.php.sysvmsg or true;
+    sysvsemSupport = config.php.sysvsem or true;
+    sysvshmSupport = config.php.sysvshm or true;
+    soapSupport = config.php.soap or true;
+    socketsSupport = config.php.sockets or true;
+    sqliteSupport = config.php.sqlite or true;
+#   tidySupport = config.php.tidy or true;
+    xmlrpcSupport = config.php.xmlrpc or true;
+    xslSupport = config.php.xsl or true;
+    zipSupport = config.php.zip or true;
+    zlibSupport = config.php.zlib or true;
+  };
+
+  configurePhase = ''
+    iniFile=$out/etc/php.ini
+    [[ -z "$libxml2" ]] || export PATH=$PATH:$libxml2/bin
+    ./configure --with-config-file-scan-dir=/etc --with-config-file-path=$out/etc \
+        --prefix=$out $configureFlags \
+        --enable-shared --enable-magic-quotes --enable-safe-mode
+    echo configurePhase end
+  '' + stdenv.lib.optionalString stdenv.isDarwin ''
+    # don't build php.dSYM as the php binary
+    sed -i 's/EXEEXT = \.dSYM/EXEEXT =/' Makefile
+  '';
+
+  installPhase = ''
+    unset installPhase; installPhase;
+    cp php.ini-production $iniFile
+  '' + ( stdenv.lib.optionalString stdenv.isDarwin ''
+    for prog in $out/bin/*; do
+      wrapProgram "$prog" --prefix DYLD_LIBRARY_PATH : "$DYLD_LIBRARY_PATH"
+    done
+  '' );
+
+  src = fetchurl {
+    url = "http://cz1.php.net/get/php-${version}.tar.bz2/from/this/mirror";
+    sha256 = "1480pfp4391byqzmvdmbxkdkqwdzhdylj63sfzrcgadjf9lwzqf4";
+    name = "php-${version}.tar.bz2";
+  };
+
+  meta = {
+    description = "An HTML-embedded scripting language";
+    homepage    = http://www.php.net/;
+    license     = "PHP-3";
+    maintainers = with stdenv.lib.maintainers; [ lovek323 ];
+    platforms   = stdenv.lib.platforms.unix;
+  };
+
+  patches = [ ./fix.patch ./5.3-freetype-dirs.patch ];
+
+})
diff --git a/pkgs/development/interpreters/php/fix.patch b/pkgs/development/interpreters/php/fix.patch
new file mode 100644
index 00000000000..02f2c9c6c93
--- /dev/null
+++ b/pkgs/development/interpreters/php/fix.patch
@@ -0,0 +1,78 @@
+--- php-5.0.4/configure	2005-04-03 11:42:50.000000000 +0200
++++ php-5.0.4-1/configure	2005-07-10 11:06:22.292271176 +0200
+@@ -3381,7 +3381,7 @@
+ 
+   case $host_alias in
+   *aix*)
+-    APXS_LIBEXECDIR=`$APXS -q LIBEXECDIR`
++    APXS_LIBEXECDIR="$prefix/modules"
+     EXTRA_LDFLAGS="$EXTRA_LDFLAGS -Wl,-brtl -Wl,-bI:$APXS_LIBEXECDIR/httpd.exp"
+     PHP_AIX_LDFLAGS="-Wl,-brtl"
+     build_type=shared
+@@ -3576,7 +3576,7 @@
+   if test "$?" != "0"; then
+     APACHE_INSTALL="$APXS -i -a -n php5 $SAPI_SHARED" # Old apxs does not have -S option
+   else 
+-    APXS_LIBEXECDIR='$(INSTALL_ROOT)'`$APXS -q LIBEXECDIR`
++    APXS_LIBEXECDIR="$prefix/modules"
+     if test -z `$APXS -q SYSCONFDIR`; then
+       APACHE_INSTALL="\$(mkinstalldirs) '$APXS_LIBEXECDIR' && \
+                        $APXS -S LIBEXECDIR='$APXS_LIBEXECDIR' \
+@@ -4680,7 +4680,7 @@
+     { echo "configure: error: Please note that Apache version >= 2.0.40 is required." 1>&2; exit 1; }
+   fi
+ 
+-  APXS_LIBEXECDIR='$(INSTALL_ROOT)'`$APXS -q LIBEXECDIR`
++  APXS_LIBEXECDIR="$prefix/modules"
+   if test -z `$APXS -q SYSCONFDIR`; then
+     INSTALL_IT="\$(mkinstalldirs) '$APXS_LIBEXECDIR' && \
+                  $APXS -S LIBEXECDIR='$APXS_LIBEXECDIR' \
+@@ -5510,7 +5510,7 @@
+     { echo "configure: error: Please note that Apache version >= 2.0.44 is required." 1>&2; exit 1; }
+   fi
+ 
+-  APXS_LIBEXECDIR='$(INSTALL_ROOT)'`$APXS -q LIBEXECDIR`
++  APXS_LIBEXECDIR="$prefix/modules"
+   if test -z `$APXS -q SYSCONFDIR`; then
+     INSTALL_IT="\$(mkinstalldirs) '$APXS_LIBEXECDIR' && \
+                  $APXS -S LIBEXECDIR='$APXS_LIBEXECDIR' \
+@@ -6327,7 +6327,7 @@
+ 
+   case $host_alias in
+   *aix*)
+-    APXS_LIBEXECDIR=`$APXS -q LIBEXECDIR`
++    APXS_LIBEXECDIR="$prefix/modules"
+     EXTRA_LDFLAGS="$EXTRA_LDFLAGS -Wl,-brtl -Wl,-bI:$APXS_LIBEXECDIR/httpd.exp"
+     PHP_AIX_LDFLAGS="-Wl,-brtl"
+     build_type=shared
+@@ -6522,7 +6522,7 @@
+   if test "$?" != "0"; then
+     APACHE_HOOKS_INSTALL="$APXS -i -a -n php5 $SAPI_SHARED" # Old apxs does not have -S option
+   else 
+-    APXS_LIBEXECDIR='$(INSTALL_ROOT)'`$APXS -q LIBEXECDIR`
++    APXS_LIBEXECDIR="$prefix/modules"
+     if test -z `$APXS -q SYSCONFDIR`; then
+       APACHE_HOOKS_INSTALL="\$(mkinstalldirs) '$APXS_LIBEXECDIR' && \
+                        $APXS -S LIBEXECDIR='$APXS_LIBEXECDIR' \
+diff -rc php-5.3.18/configure php-5.3.18-new/configure
+*** php-5.3.18/configure	2012-10-17 18:29:10.000000000 +0200
+--- php-5.3.18-new/configure	2012-11-13 05:36:24.730136551 +0100
+***************
+*** 45113,45121 ****
+  
+  
+  if test "$PHP_GETTEXT" != "no"; then
+!   for i in $PHP_GETTEXT /usr/local /usr; do
+!     test -r $i/include/libintl.h && GETTEXT_DIR=$i && break
+!   done
+  
+    if test -z "$GETTEXT_DIR"; then
+      { echo "configure: error: Cannot locate header file libintl.h" 1>&2; exit 1; }
+--- 45113,45119 ----
+  
+  
+  if test "$PHP_GETTEXT" != "no"; then
+!   GETTEXT_DIR=$PHP_GETTEXT
+  
+    if test -z "$GETTEXT_DIR"; then
+      { echo "configure: error: Cannot locate header file libintl.h" 1>&2; exit 1; }
diff --git a/pkgs/top-level/all-packages.nix b/pkgs/top-level/all-packages.nix
index de1b197c4a4..8a7b7bc3685 100644
--- a/pkgs/top-level/all-packages.nix
+++ b/pkgs/top-level/all-packages.nix
@@ -6597,6 +6597,20 @@ with pkgs;
     config.php.apxs2 = false;
   };
 
+  php53 = callPackage ../development/interpreters/php/5.3.nix { };
+
+  php_fpm53 = callPackage ../development/interpreters/php/5.3.nix {
+    config = config // {
+      php = (config.php or {}) // {
+        fpm = true;
+        apxs2 = false;
+      };
+    };
+  };
+
+  php_fpm53_apc = callPackage ../development/libraries/php-apc {
+    php = php_fpm53;
+  };
 
   picoc = callPackage ../development/interpreters/picoc {};
 
