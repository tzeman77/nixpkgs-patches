firehol service

diff --git a/nixos/modules/module-list.nix b/nixos/modules/module-list.nix
index 96fe4bb..1cfa1d7 100644
--- a/nixos/modules/module-list.nix
+++ b/nixos/modules/module-list.nix
@@ -156,6 +156,7 @@
   ./services/networking/dnscache.nix
   ./services/networking/dnsmasq.nix
   ./services/networking/ejabberd.nix
+  ./services/networking/firehol.nix
   ./services/networking/firewall.nix
   ./services/networking/tcpcrypt.nix
   ./services/networking/flashpolicyd.nix
diff --git a/nixos/modules/services/networking/firehol.nix b/nixos/modules/services/networking/firehol.nix
new file mode 100644
index 0000000..ec4fe11
--- /dev/null
+++ b/nixos/modules/services/networking/firehol.nix
@@ -0,0 +1,66 @@
+{ config, pkgs, ... }:
+
+with pkgs.lib;
+
+let
+
+  cfg = config.networking.firehol;
+  pkg = pkgs.firehol;
+
+in
+
+{
+
+  ###### interface
+
+  options = {
+
+    networking.firehol.enable = mkOption {
+      default = false;
+      description = "Whether to enable firehol firewall.";
+    };
+
+    networking.firehol.configuration = mkOption {
+      default = ''
+        version 5
+
+        interface any world
+          client all accept
+      '';
+      description = "Firehol configuration, see firehol.conf(5).";
+    };
+
+  };
+
+  ###### implementation
+
+  config = mkIf cfg.enable {
+
+    networking.firewall.enable = false; # mutually exclusive with nixos default firewall.
+
+    environment.etc."firehol/firehol.conf".text = cfg.configuration;
+
+    systemd.services.firehol = {
+      description = "Firehol firewall";
+      wantedBy = [ "network.target" ];
+      after = [ "network-interfaces.target" ];
+      conflicts = [ "firewall" ];
+
+      serviceConfig = {
+        Type = "oneshot";
+        RemainAfterExit = true;
+        ExecStop = ''
+          ${pkg}/sbin/firehol stop
+        '';
+      };
+
+      script = ''
+        ${pkg}/sbin/firehol start
+      '';
+    };
+
+  };
+
+}
+
+# vim: et ts=2 sw=2 
