dnsserver module (supervised via systemd)

diff --git a/nixos/modules/module-list.nix b/nixos/modules/module-list.nix
index 8bcb700..f23a7cb 100644
--- a/nixos/modules/module-list.nix
+++ b/nixos/modules/module-list.nix
@@ -180,6 +180,7 @@
   ./services/networking/ssh/lshd.nix
   ./services/networking/ssh/sshd.nix
   ./services/networking/tftpd.nix
+  ./services/networking/tinydns.nix
   ./services/networking/unbound.nix
   ./services/networking/vsftpd.nix
   ./services/networking/wakeonlan.nix
diff --git a/nixos/modules/services/networking/tinydns.nix b/nixos/modules/services/networking/tinydns.nix
new file mode 100644
index 0000000..b1486b3
--- /dev/null
+++ b/nixos/modules/services/networking/tinydns.nix
@@ -0,0 +1,84 @@
+{ config, pkgs, ... }:
+
+with pkgs.lib;
+
+let
+
+  cfg = config.services.tinydns;
+  dtools = pkgs.daemontools;
+  pkg = pkgs.djbdns;
+
+in
+
+{
+
+  ###### interface
+
+  options = {
+
+    services.tinydns = {
+
+      enable = mkOption {
+        default = false;
+        description = "Whether to enable tinydns (authoritative) service.";
+      };
+
+      dataLimit = mkOption {
+        default = 1048576;
+        description = "Data segment limit";
+      };
+
+      listenIp = mkOption {
+        default = "127.0.0.1";
+        description = "Listening IP address. Should be the external IP.";
+      };
+
+      root = mkOption {
+        default = "/var/db/tinydns/root";
+        description = "tinydns root dir";
+      };
+    };
+  };
+
+
+  ###### implementation
+
+  config = mkIf cfg.enable {
+
+    environment.systemPackages = [ pkg dtools ];
+
+    users.extraUsers.tinydns = {
+      uid = config.ids.uids.tinydns;
+      group = "tinydns";
+      description = "tinydns service user";
+    };
+
+    users.extraGroups.tinydns.gid = config.ids.gids.tinydns;
+
+    systemd.services.tinydns = {
+      description = "DNS server (tinydns) service";
+      wantedBy = [ "multi-user.target" ];
+      after = [ "network.target" ];
+      environment = {
+        IP = cfg.listenIp;
+        ROOT = cfg.root;
+      };
+
+      preStart = ''
+        mkdir -p ${cfg.root}
+      '';
+
+      serviceConfig = {
+        ExecStart =
+          "${dtools}/bin/envuidgid tinydns ${dtools}/bin/softlimit " +
+          "-d ${toString cfg.dataLimit} ${pkg}/bin/tinydns";
+        Restart = "always";
+        Type = "simple";
+      };
+    };
+  };
+
+}
+
+# vim: et ts=2 sw=2
+
