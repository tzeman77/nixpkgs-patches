dnscache service

diff --git a/nixos/modules/misc/ids.nix b/nixos/modules/misc/ids.nix
index adaa2b0..9ad0496 100644
--- a/nixos/modules/misc/ids.nix
+++ b/nixos/modules/misc/ids.nix
@@ -102,6 +102,9 @@
       tcpcryptd = 93; # tcpcryptd uses a hard-coded uid. We patch it in Nixpkgs to match this choice.
       zope2 = 94;
       firebird = 95;
+      dnscache = 184;
+      tinydns = 185;
+      dnslog = 186;
 
       # When adding a uid, make sure it doesn't match an existing gid.
 
@@ -192,6 +195,9 @@
       # When adding a gid, make sure it doesn't match an existing uid.
 
       users = 100;
+      dnscache = 184;
+      tinydns = 185;
+      dnslog = 186;
       nixbld = 30000;
       nogroup = 65534;
     };
diff --git a/nixos/modules/module-list.nix b/nixos/modules/module-list.nix
index 35835c8..6b11986 100644
--- a/nixos/modules/module-list.nix
+++ b/nixos/modules/module-list.nix
@@ -150,6 +150,7 @@
   #./services/networking/dhclient.nix
   ./services/networking/dhcpcd.nix
   ./services/networking/dhcpd.nix
+  ./services/networking/dnscache.nix
   ./services/networking/dnsmasq.nix
   ./services/networking/ejabberd.nix
   ./services/networking/firewall.nix
diff --git a/nixos/modules/services/networking/dnscache.nix b/nixos/modules/services/networking/dnscache.nix
new file mode 100644
index 0000000..fc11cdd
--- /dev/null
+++ b/nixos/modules/services/networking/dnscache.nix
@@ -0,0 +1,132 @@
+{ config, pkgs, ... }:
+
+with pkgs.lib;
+
+let
+
+  cfg = config.services.dnscache;
+
+  dtools = pkgs.daemontools;
+
+in
+
+{
+
+  ###### interface
+
+  options = {
+
+    services.dnscache = {
+
+      enable = mkOption {
+        default = false;
+        description = "Whether to enable dnscache service.";
+      };
+
+      cacheSize = mkOption {
+        default = 10000000;
+        description = "Cache size";
+      };
+
+      dataLimit = mkOption {
+        default = 10485760;
+        description = "Data segment limit";
+      };
+
+      listenIp = mkOption {
+        default = "127.0.0.1";
+        description = "Listening IP address";
+      };
+
+      sendIp = mkOption {
+        default = "0.0.0.0";
+        description = "Source IP";
+      };
+
+      root = mkOption {
+        default = "/var/db/dnscache/root";
+        description = "dnscache root dir";
+      };
+
+      logDir = mkOption {
+        default = "/tmp/dnscache";
+        description = "Log dir";
+      };
+
+      allowFrom = mkOption {
+        default = [ "127.0.0.1" ];
+        description = "List of IP addresses/prefixes to allow query";
+      };
+    };
+
+  };
+
+
+  ###### implementation
+
+  config = mkIf cfg.enable {
+
+    systemd.services.minit.enable = true;
+
+    environment.systemPackages = [ pkgs.daemontools pkgs.djbdns pkgs.minit ];
+
+    users.extraUsers.dnscache = {
+      uid = config.ids.uids.dnscache;
+      group = "dnscache";
+      description = "dnscache service user";
+    };
+
+    users.extraGroups.dnscache.gid = config.ids.gids.dnscache;
+
+    users.extraUsers.dnslog = {
+      uid = config.ids.uids.dnslog;
+      group = "dnslog";
+      description = "dnslog service user";
+    };
+
+    users.extraGroups.dnslog.gid = config.ids.gids.dnslog;
+
+    environment.etc = {
+      "minit/dns/cache/env/CACHESIZE".text = toString cfg.cacheSize;
+      "minit/dns/cache/env/DATALIMIT".text = toString cfg.dataLimit;
+      "minit/dns/cache/env/IP".text = cfg.listenIp;
+      "minit/dns/cache/env/IPSEND".text = cfg.sendIp;
+      "minit/dns/cache/env/ROOT".text = cfg.root;
+      "minit/dns/cache/run" = {
+        mode = "0755";
+        text = ''
+          #!${pkgs.bash}/bin/sh
+          exec 2>&1
+          mkdir -p ${cfg.root}/{ip,servers}
+          for i in ${toString cfg.allowFrom}; do
+            [ -f ${cfg.root}/ip/$i ] || touch ${cfg.root}/ip/$i
+          done
+          [ -f "${cfg.root}/servers/@" ] || cp ${pkgs.djbdns}/etc/dnsroots.global "${cfg.root}/servers/@"
+          [ -f /run/dnscache-seed ] || dd if=/dev/urandom of=/run/dnscache-seed bs=512 count=1
+          exec </run/dnscache-seed
+          exec ${dtools}/bin/envdir env ${pkgs.bash}/bin/sh -c '
+            exec ${dtools}/bin/envuidgid dnscache ${dtools}/bin/softlimit -o250 -d "${toString cfg.dataLimit}" ${pkgs.djbdns}/bin/dnscache
+          '
+        '';
+      };
+      "minit/dns/cache/respawn".text = "";
+      "minit/dns/cache/log/run" = {
+        mode = "0755";
+        text = ''
+          #!${pkgs.bash}/bin/sh
+          mkdir -p "${cfg.logDir}"
+          chown dnslog "${cfg.logDir}"
+          chmod 700 "${cfg.logDir}"
+          exec ${dtools}/bin/setuidgid dnslog ${dtools}/bin/multilog t s1048576 "${cfg.logDir}"
+        '';
+      };
+      "minit/dns/cache/log/respawn".text = "";
+    };
+
+
+  };
+
+}
+
+# vim: et ts=2 sw=2
+
