dnscache service

diff --git a/nixos/modules/misc/ids.nix b/nixos/modules/misc/ids.nix
index 1e5393f..f770670 100644
--- a/nixos/modules/misc/ids.nix
+++ b/nixos/modules/misc/ids.nix
@@ -209,6 +209,9 @@
       uptimed = 184;
       zope2 = 185;
       ripple-data-api = 186;
+      dnscache = 184;
+      tinydns = 185;
+      dnslog = 186;
       mediatomb = 187;
       rdnssd = 188;
       ihaskell = 189;
@@ -442,6 +445,9 @@
       # uids and gids. Also, don't use gids above 399!
 
       users = 100;
+      dnscache = 184;
+      tinydns = 185;
+      dnslog = 186;
       nixbld = 30000;
       nogroup = 65534;
     };
diff --git a/nixos/modules/module-list.nix b/nixos/modules/module-list.nix
index a2b7e89..b4b2fa1 100644
--- a/nixos/modules/module-list.nix
+++ b/nixos/modules/module-list.nix
@@ -275,6 +275,7 @@
   ./services/networking/ddclient.nix
   ./services/networking/dhcpcd.nix
   ./services/networking/dhcpd.nix
+  ./services/networking/dnscache.nix
   ./services/networking/dnscrypt-proxy.nix
   ./services/networking/dnsmasq.nix
   ./services/networking/docker-registry-server.nix
diff --git a/nixos/modules/services/networking/dnscache.nix b/nixos/modules/services/networking/dnscache.nix
new file mode 100644
index 0000000..3f9443c
--- /dev/null
+++ b/nixos/modules/services/networking/dnscache.nix
@@ -0,0 +1,137 @@
+{ config, pkgs, ... }:
+
+with pkgs.lib;
+
+let
+
+  cfg = config.services.dnscache;
+  dtools = pkgs.daemontools;
+  pkg = pkgs.djbdns;
+
+in
+
+{
+
+  ###### interface
+
+  options = {
+
+    services.dnscache = {
+
+      enable = mkOption {
+        default = false;
+        description = "Whether to enable dnscache service.";
+      };
+
+      cacheSize = mkOption {
+        default = 10000000;
+        description = "Cache size";
+      };
+
+      dataLimit = mkOption {
+        default = 10485760;
+        description = "Data segment limit";
+      };
+
+      listenIp = mkOption {
+        default = "127.0.0.1";
+        description = "Listening IP address";
+      };
+
+      sendIp = mkOption {
+        default = "0.0.0.0";
+        description = "Source IP";
+      };
+
+      root = mkOption {
+        default = "/var/db/dnscache/root";
+        description = "dnscache root dir";
+      };
+
+      allowFrom = mkOption {
+        default = [ "127.0.0.1" ];
+        description = "List of IP addresses/prefixes to allow query";
+      };
+
+      forwardOnly = mkOption {
+        default = false;
+        description = "If the cache forwards queries to recursive nameservers";
+      };
+
+      nameservers = mkOption {
+        default = [];
+        description = "List of root servers IP addresses. Uses dnsroots.global if empty";
+      };
+    };
+
+  };
+
+
+  ###### implementation
+
+  config = mkIf cfg.enable {
+
+    environment.systemPackages = [ pkg dtools pkgs.diffutils ];
+
+    environment.etc."dnscache-root-servers" =
+      if cfg.nameservers == [] then
+        { source = "${pkgs.djbdns}/etc/dnsroots.global"; }
+      else
+        { text = concatStringsSep "\n" cfg.nameservers; };
+
+    users.extraUsers.dnscache = {
+      uid = config.ids.uids.dnscache;
+      group = "dnscache";
+      description = "dnscache service user";
+    };
+
+    users.extraGroups.dnscache.gid = config.ids.gids.dnscache;
+
+    users.extraUsers.dnslog = {
+      uid = config.ids.uids.dnslog;
+      group = "dnslog";
+      description = "dnslog service user";
+    };
+
+    users.extraGroups.dnslog.gid = config.ids.gids.dnslog;
+
+    systemd.services.dnscache = {
+      description = "DNS cache service";
+      wantedBy = [ "multi-user.target" ];
+      after = [ "network.target" ];
+      environment = {
+        CACHESIZE = toString cfg.cacheSize;
+        DATALIMIT = toString cfg.dataLimit;
+        IP = cfg.listenIp;
+        IPSEND = cfg.sendIp;
+        ROOT = cfg.root;
+      } // optionalAttrs (cfg.forwardOnly) {
+        FORWARDONLY = "1";
+      };
+
+      preStart = ''
+        mkdir -p ${cfg.root}/{ip,servers}
+        for i in ${toString cfg.allowFrom}; do
+          [ -f ${cfg.root}/ip/$i ] || touch ${cfg.root}/ip/$i
+        done
+        rs=${cfg.root}/servers/@
+        [ -f $rs ] && ${pkgs.diffutils}/bin/cmp -s /etc/dnscache-root-servers $rs || cp /etc/dnscache-root-servers $rs
+        [ -f /run/dnscache-seed ] || dd if=/dev/urandom of=/run/dnscache-seed bs=512 count=1
+      '';
+
+      serviceConfig = {
+        ExecStart =
+          "${pkgs.bash}/bin/sh -c 'exec </run/dnscache-seed; exec " +
+          "${dtools}/bin/envuidgid dnscache ${dtools}/bin/softlimit -o 250 " +
+          "-d ${toString cfg.dataLimit} ${pkg}/bin/dnscache" +
+          "'";
+        Restart = "always";
+        Type = "simple";
+      };
+    };
+  };
+
+}
+
+# vim: et ts=2 sw=2
+
