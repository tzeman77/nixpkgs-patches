runit service

diff --git a/nixos/modules/module-list.nix b/nixos/modules/module-list.nix
index 84d57f4..bac438a 100644
--- a/nixos/modules/module-list.nix
+++ b/nixos/modules/module-list.nix
@@ -424,6 +424,7 @@
   ./services/system/kerberos.nix
   ./services/system/minit.nix
   ./services/system/nscd.nix
+  ./services/system/runit.nix
   ./services/system/uptimed.nix
   ./services/torrent/deluge.nix
   ./services/torrent/peerflix.nix
diff --git a/nixos/modules/services/system/runit.nix b/nixos/modules/services/system/runit.nix
new file mode 100644
index 0000000..de19570
--- /dev/null
+++ b/nixos/modules/services/system/runit.nix
@@ -0,0 +1,142 @@
+{ config, pkgs, lib, ... }:
+
+with lib;
+
+let
+
+  cfg = config.services.runit;
+  rcfg = config.runit;
+
+  pkg = cfg.package;
+
+  sDerivations = rcfg.serviceDerivations // (mapAttrs mkService rcfg.services);
+
+  runitServices = pkgs.stdenv.mkDerivation {
+    name = "runit-services";
+    preferLocalBuild = true;
+    buildCommand = ''
+      mkdir -p $out
+      ${concatStringsSep "\n" (mapAttrsToList (n: v: "ln -sf ${v} $out/${n}")
+        sDerivations)}
+    '';
+  };
+
+  mkService = n: s: pkgs.stdenv.mkDerivation {
+    name = n;
+    preferLocalBuild = true;
+    buildCommand = ''
+      mkdir -p $out
+      echo "${s.run}" > $out/run
+      chmod 755 $out/run
+      ln -sf /run/sv.${n} $out/supervise
+    '';
+  };
+
+in
+
+{
+
+  ###### interface
+
+  options = {
+
+    runit = {
+
+      serviceDerivations = mkOption {
+        default = {};
+        description = "Runit supervised services";
+      };
+
+      services = mkOption {
+        type = types.attrsOf (types.submodule {
+
+          options = {
+
+            run = mkOption {
+              type = types.str;
+              default = "";
+              description = "Run script";
+            };
+
+            logdirs = mkOption {
+              type = types.attrsOf (types.submodule {
+                options = {
+                  config = mkOption {
+                    type = types.str;
+                    default = "s10";
+                    description = "svlogd logdir config";
+                  };
+                };
+              });
+              default = {};
+              description = "svlogd logdirs";
+            };
+
+          };
+        });
+
+        default = {};
+        description = "Runit supervised services";
+      };
+
+    };
+
+    services = {
+      runit = {
+        enable = mkOption {
+          default = false;
+          description = "Whether to enable runit service.";
+        };
+
+        package = mkOption {
+          type = types.package;
+          default = pkgs.runit;
+          description = "Runit package to use";
+        };
+
+      };
+    };
+  };
+
+
+  ###### implementation
+
+  config = mkIf config.services.runit.enable {
+
+    environment.systemPackages = [ pkg ];
+
+    system.activationScripts.runit = ''
+      ${pkg}/bin/runsvchdir ${runitServices}
+    '';
+
+    systemd.services.runit =
+      { description = "Runit service";
+
+        path = [
+          "/run/current-system/sw"
+        ];
+
+        wantedBy = [ "multi-user.target" ];
+        after = [ "network.target" ];
+
+        preStart =
+          ''
+            dir=/etc/runit/runsvdir
+            mkdir -p $dir
+            if ! test -e /service; then
+              ln -sf $dir/current /service
+            fi
+          '';
+
+        serviceConfig = {
+          Type = "simple";
+          ExecStart = "${pkg}/bin/runsvdir -P /etc/runit/runsvdir/current";
+        };
+      };
+
+  };
+
+}
+
+# vim: et ts=2 sw=2
+
